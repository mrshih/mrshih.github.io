<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[MR SHIH]]></title>
  <link href="http://mrshih.github.io/atom.xml" rel="self"/>
  <link href="http://mrshih.github.io/"/>
  <updated>2015-05-21T00:03:20+08:00</updated>
  <id>http://mrshih.github.io/</id>
  <author>
    <name><![CDATA[施安宏]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[為何又開始寫文章?]]></title>
    <link href="http://mrshih.github.io/blog/2015/05/20/why-start-write-article/"/>
    <updated>2015-05-20T18:23:22+08:00</updated>
    <id>http://mrshih.github.io/blog/2015/05/20/why-start-write-article</id>
    <content type="html"><![CDATA[<p><img src="http://mrshih.github.io/images/sandglass-of-text.jpg" alt="image" /></p>

<h2>比履歷強多了</h2>

<p>寫blog真的是很好推薦自己的方式。當你寫履歷的時候如果可以丟出一個個人網站，你馬上就像坐上噴射機一樣把其他人甩在後面！網站上面有你長期對產業或專業的獨特見解，這比光看履歷表更加分。</p>

<p>因為履歷表有可能是騙人的，大量美化的！但一個長期經營的部落格不僅可以快速令人信服你是某方面的專家，是別人想要的人才，也可以證明你是一個對此有熱情而且具備耐信與毅力等特質的人才，因為長期寫這些真得不容易。以上都是討喜而且履歷表線不出的特質。</p>

<h2>少數可以累積的資產</h2>

<p>好比複利，寫文章是你少數可以累積的資產，你花在這上面的時間是不會白費，久了你就可以端出別人拿不出來的好東西，你專業有深度的blog，這是你的絕對壓倒性優勢，因為這需要時間累積。</p>

<p>我很尊敬的謝老師說過：</p>

<blockquote><p>時間是你最好的朋友。</p></blockquote>

<h2>不打烊廣告與找到志同道合好朋友</h2>

<p>當你寫出有用的文章時，那些文章就像24小時不停放送的廣告，一直在幫你對外結緣。</p>

<p>在這個小眾化的時代，每個人都透過google去找尋自己有興趣的事物，而你的文章將可以媒合你與那些跟你志同道合的朋友。</p>

<h2>強迫自己吸收新知</h2>

<p>還有一點，如果一段時間你寫不出文章，那要麻你真的很忙，就像創業中的CEO，不然就是你的腦袋長時間沒有填入有用的知識，沒有新的觀念去衝擊既有知識。這能強迫你去取得有用的知識。</p>

<h2>訓練口語表達</h2>

<p>最後寫文章的好處在於整理思考。寫文章之所以比動嘴巴累是在於文章需要結構，需要起承轉合，需要腦袋思考反芻之後想辦法讓人易於理解。長期寫下來對於文字表達絕對具有巨大幫助。</p>

<p>對於口頭表達是否有幫助？絕對有！很多人會苦惱也時候就是表達不出自己的意思給別人，自己講得很高興但別人完全不理解。這中間差別就是你有沒有思考你到底要講什麼。任何觀點如果你寫成文章，你就可以通篇先在腦內整理一遍，你會知道重點，而當你之後用口頭跟別人講述，你自然而然可以吸引到聽者，並清楚表達你想講的事情。</p>

<h2>對於Developer</h2>

<p>如果你剛好是寫程式的，我想你真的要去好好去架一個blog並寫文章。你可以累積100篇你的解bug心得，技術新知，工作雜談。用LAMP或者Github網頁託管讓你免成本就有穩定page。有了平時準備，找工作時必然無往不利。有這麼豐富的參考資料證明你走過哪些路，還需要面試嗎？這跟現在很流行coder履歷要附上github帳號是一樣的道理，就是要看你平時做過哪些事情不是嗎？</p>

<p>我目前實在找不出經營一個自己的blog，持續寫有用的文章有任何壞處。
如果有，可以留言分享你的看法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小技術大問題—救小狗Pivot到省百億]]></title>
    <link href="http://mrshih.github.io/blog/2014/07/23/pivot/"/>
    <updated>2014-07-23T20:22:58+08:00</updated>
    <id>http://mrshih.github.io/blog/2014/07/23/pivot</id>
    <content type="html"><![CDATA[<p><img src="http://mrshih.github.io/images/pivot1.jpg" alt="image" /></p>

<p>一種解決問題的作法套用在不同的情境上，產生的效益就可能相差數萬倍。我們專題一開始看到路邊有受傷流浪狗兒，如果冷眼旁觀實在是不忍心，但第一個你不知道該找誰幫忙？找市立收容所？電話是幾號？更別提還要花許多時間在通報，通報了也可能只是安樂死。第二個可以找當地流浪動物協會，但一般人根本不會知道有哪些協會可以幫忙！現代人很忙碌，很費工夫的事實在是心有餘而力不足。所以我們想利用智慧型手機結合當地相關協會標準化通報流程，就能快速定外拍照上傳通報一次搞定，解決通報麻煩的問題，也就是流浪動物通報系統。</p>

<p>但找到問題並想方法解決每個人都會，但重點是找到的問題到底有多重要？好比上面的例子，一個人一年當中有多少機會碰到一隻需要救援的流浪狗，又有多少可能你真的會想要通報而身邊剛好帶著智慧型手機又知道我們的程式？這樣算下來我們當初設想的使用情境幾乎根本不會發生，所以其實是沒有解決到任何人的問題，效益等於零。</p>

<p>但當時我們整個通報系統都做出來了，但是卻因為效益等於零被迫重新想一個。但最寶貴的資源就是時間，豈容你從頭開始再試。以前實驗室老師有一句話說得好：「跌倒了先別急著站起來，看看地上有沒有東西可以撿起來」。所以只能在既有的系統上想一個新的應用，試著去提高帶給別人的效益—Pivot。於是流浪貓狗通報系統就搖身一變改成雲端路平專案通報系統。</p>

<p>Pivot的重點就是試著在不打掉根基的情況下，試著轉個情境找出新效益，而提高效益從問題面著手。路不有多嚴重？每年造成上百人傷亡、相關國賠高達上億，而每年花好幾百億就是改善不了，納稅人的錢都不知道被A到哪裡去，於上把通報系統應用在這麼大的問題上，帶來的效益就很可觀，畢竟這關乎到全用路人的權益。問題夠大也是後來全國專題競賽此系統能脫穎而出的關鍵。從來技術方法就不是重點，重點要有狼心、問題問大、問的讓人心有戚戚焉。</p>

<p>我們從舊有的方式去發現問題。傳統上人工報案曠日廢時又麻煩，就利用時下流行的智慧型手機標準化整個通報流程來解決，接著將資料上傳到我們在東京AWS的雲端伺服器做資料彙整。而常有部會首長要靠報紙才知道某個地方發生哪些問題，就彙整資料利用商業智慧的概念結合Google Map在上面標註圖案，首長透過視覺化圖表一眼就能了解全貌。而最重要的莫過於多年來花大錢路始終修不好，我們就把歷年資料全部公開，結合Facebook讓大家針對你不爽的事件來按讚分享，根據這些民怨做成熱門旁行榜，讓記者、議員來挖他們感興趣的資料，現在很多網友都利用這樣的模式來串連社群的力量幫自己來發聲，共同來監督公共工程。</p>

<p>路不平問題關乎到上百條人命、上千億的金錢，就算解決方法很爛效益只有5％，算一算還是5條人命50億，怎樣都打死一票小問題的最大效益。</p>

<p>一切都要回到『你到底要解決什麼問題？』</p>

<p>你要解決的問題很大很嚴重，別人根本就不會關心你用了什麼技術。悠游卡解決了你我不必每天辛苦找零錢的問題，但有人關心它使用的技術叫NFC嗎？除非你今天根本沒有解決別人真正關心的問題，才會需要拿絢麗的技術來拼命說來班門弄斧。所以一開始就選擇大問題去想方法，不要系統開發出來才發現沒人在意。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[客觀簡報的困難]]></title>
    <link href="http://mrshih.github.io/blog/2014/07/16/customer-talk/"/>
    <updated>2014-07-16T21:13:31+08:00</updated>
    <id>http://mrshih.github.io/blog/2014/07/16/customer-talk</id>
    <content type="html"><![CDATA[<p><img src="http://mrshih.github.io/images/customer-talk1.jpg" alt="image" /></p>

<p>我曾經待在一個瘋狂報名比賽，講究技術的硬派實驗室裡，我們報的比賽都是如微電腦、嵌入式這樣非常硬派的技術比賽，幾百坪的空間通常都很樸素，一些簡單的標語旗幟就差不多了。但是，裡面每個評審可都是相關領域中專家中的專家，我們做的題目大概用了領域內的哪些高階技術，多新穎、多困難、要花多少時間、多努力大概你稍微解釋一下彼此都能馬上心領神會。所以報告的流程就是帶一下要解決的問題，接下來就直接DEMO實際系統，什麼前言、動機、問題嚴重性越少越好，有的評審乾脆會叫你跳過把時間留給實際DEMO。這種我稱之為工學院比賽。</p>

<p>就像期末教授叫你上台報告這學期學到了什麼一樣，大家在同個領域差不多的背景知識下，大概都能很快了解你在講什麼。所以把所用的厲害技術說出來，DEMO系統不要出大問題，剩下就看評審對你的技術還有DEMO給幾分了。我其實建議所有人都要參加過這種比賽練底子，有了某方面底子說話自然比較不怕，提昇台風很明顯。</p>

<p>還有另一種比賽叫商管型，會場佈置像金馬獎，參賽隊伍如嘉年華，甚至現場還有live小組直播比賽狀況。這種比賽就是大，面對所有大眾，所以邀請的評審來自四面八方，政府官員你不知道是那個部門的、CEO你不知道是那家公司的、教授你不知道是鑽研哪個領域的，每個人的知識背景都不一樣，所以你要怎麼聊技術？你會跟一個阿嬤努力解釋你用了什麼技術嗎？還是你會努力把這個產品跟她的孫子產生連結？這就是很多專業型團隊一跨到商管型比賽時常會感到挫敗的盲點。</p>

<p>常常硬底子團隊自己埋著頭幹，技術一直講，別人狀況外也不知道。等到你回過頭來發現怎麼你講的跟評審想的完全是兩碼子事，問題才瞬間爆發開來。這時就會產生參賽者覺得莫名其妙，評審超難溝通，分數打得超沒依據，我愁眉苦脸，千里馬沒有伯樂，這些努力和辛酸沒人了解，公道在哪裡。</p>

<p>當你報告的時候評審在想的事情永遠都跟你想的事情不一樣。你在學校演練的講稿都是你自己想講的，都不是評審想聽的。你一定要多找老師反覆報告給他們聽，然後趕快根據回饋修正，這種顧客開發方式才會在客觀上抓住重(賣)點。絕對避免出去比賽前一天才把第一版的講稿生出來，然後感覺很充實很滿意，結果出去比賽才發現怎麼觀眾反映都在意料之外。</p>

<p>想辦法把你的題目推銷給一般大眾，你要說服他們真的很難。不要花了一堆時間在講別人不懂的技術，然後看到自己的DEMO系統畫面就覺得很爽大功告成。重點真的不在你多寫了幾個小功能，因為別人真的不想知道「你」做了什麼，簡報的重點是讓「評審」有興趣，重點是這個系統跟他到底有什麼關係？不管是拿問題嚴重性來威嚇評審，拿效益比如你有跟哪幾個有名大咖合作來說服評審，或是拿流程圖外加講故事講到他們心有戚戚焉，這樣子反覆的透過他們的生活經驗講他們聽的懂的話，你的終極目標拿高分才有可能實現。沒有連結就結束的簡報就好像是跟評審說：我不想知道你到底懂了沒，反正我做了出來而且很讚，請給分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你確定寫程式跟製造業不一樣？]]></title>
    <link href="http://mrshih.github.io/blog/2014/07/09/what-different-between-programmer-and-manufacturing/"/>
    <updated>2014-07-09T02:36:59+08:00</updated>
    <id>http://mrshih.github.io/blog/2014/07/09/what-different-between-programmer-and-manufacturing</id>
    <content type="html"><![CDATA[<p><img src="http://mrshih.github.io/images/what-different-between-programmer-and-manufacturing1.jpg" alt="image" /></p>

<p>台灣從過去製造業的思維延伸很喜歡做/教一件事，就是coustom development顧客開發的相反叫product development產品開發。而事實上創意特別是網路，一定是顧客開發，因為沒有什麼產品好做阿！我們又沒有什麼很厲害的晶片，很神奇的電路什麼的，引用一位網路業的前輩大師在他的FB上寫的這段話：</p>

<blockquote><p><em>台灣培養出一堆癡狂幫別人做產品的公司和人才，做完交差就認為大功告成。國外公司則是拼命想把做產品的時間縮短，花大量時間資源在做行銷、銷售和品牌。格局和野心，決定了這世界誰主宰，誰血汗。Alex，EZTABLE Co-Founder＆CEO</em></p></blockquote>

<p>舉個例子來講，所有人都在講說鴻海多厲害多厲害，鴻海很偉大，搶下訂單幫apple做出一隻隻iphone很了不起，tpk 宸鴻做出面板超屌，然後每天台灣人就在自爽台灣之光台灣之光。我問大家，請問做一隻iphone比較難還是今年要賣出8000萬隻iphpne比較難？</p>

<p>當然是賣阿！</p>

<p>所以這個毛利的分配是很正常很合理的，當台灣一天到晚哀號iphone毛利台灣只分到0.6%~0.7%，因為做的價值就只有到那裡阿，你看賈伯斯還要上台講個發表會演說，用那麼漂亮的廣告，還有那麼棒的文宣，還要在世界各地蓋都可以當旅遊景點的apple store！那些東西很難耶！那比待在實驗室，不用接觸消費者，每天關在實驗室做事情寫code這個最簡單。</p>

<p>只是這個東西為什麼最簡單，因為他只是要勞力去換回來，勞力還有肝！可是我跟你講肝跟勞力就是最廉價的東西，誰沒有勞力誰沒有肝誰不會砸？腦袋和知識產業才是最難的。要消費者買你的帳要想多久？你的壓力多大？所以為什麼你看到台灣的工程師常常都是乾乾癟癟瘦瘦的，因為肝不好麻，為什麼那些apple的工程師（還有你常在國外網站電影上看到的工程師）每次來鴻海富士康巡場的時候每個都吃的肥肥的，可是都禿頭？</p>

<p>因為他們一天到晚都在想完蛋了賈伯斯要叫我賣8000萬隻，我去哪裡找來8000萬個人來買iphpne？所以這些壓力都在腦袋裡，他必須要靜下來想，這不只是做什麼事情的問題，他還要想怎樣來賣。可是台灣的我不用想，我就是做，別人交代什麼就做什麼就對了，趕快想，雖然是想可是就是想著怎麼把它做出來，做出來也不是你的東西，後續產出的價值也跟你無關，所以是做白工，又是浪費勞力，跟製造業差在哪裡？</p>

<p>在這個知識產業凌駕一切的時代上，所以我希望跟我一樣是7、8年級的，真的希望台灣脫離製造業思維，把自己從別人影子後面推出來。舉個例子，奇美面板一開廠就賠20億，那沒有意義阿，台灣有很多這種很奇怪的事，這代表說台灣真的需要走出來，我們需要把東西直接推出來面對消費者，而不是躲在後面。講難聽一點，就是要做鴻海，好歹談判的時候要在iphone後面要印個produced by foxconn吧，好歹做一點品牌吧！懂我意思嘛？</p>

<p>不要一天到晚幫人家做事，然後交差就覺得很了不起這樣，沒有用。幫別人代工未來都賺不到什麼錢。</p>
]]></content>
  </entry>
  
</feed>
